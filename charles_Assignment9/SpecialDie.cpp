#include "SpecialDie.h"
#include "random"
#include <iostream>

//int array holding 20 ASCII values, enough for each face on a D20
int symbols[] = { 157,245,246,254,244,241,240,231,190,201,206,195,184,178,169,168,146,156,189,158 };
std::string faces = "";


/*The roll function in this derrived class is an example of polymorphism.The name of the method is the same as its counterpart in the base class
* but the method this time converts the ASCII value of the symbols subscript from int to char, and then to string to be returned back to the calling
* statement*/
std::string SpecialDie::roll() {
	//string variable to hold return value
	std::string face;

	//random device engine
	std::random_device rd;

	//range of numbers to be generated by engin, between 1 and sides.
	std::uniform_int_distribution<int> dist(1, sides);

	/*Use random number as the subscript for the symbol array.  That int value is converted to a char (to see the ASCII symbol), the char value is then
	* returned as a string to the calling statment.
	*/
	face = char(symbols[dist(rd)]);

	//return selected face
	return face;
}

/* This version of the getFaces method converts each ASCII value in the symbols array to its Char symbol.  Once the symbol is converted from int to char,
*  it is then concatenated into the faces string.   The completed string is then returned to the calling statement.
*/
std::string SpecialDie::getFaces() {
	char symbol;

	for (int i = 0; i < 20; i++) {
		symbol = symbols[i];
		faces = faces + " " + symbol;
	}

	return faces;
}